<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hash on Phạm Duy Tùng Machine Learning Blog</title>
    <link>/tags/hash/</link>
    <description>Recent content in hash on Phạm Duy Tùng Machine Learning Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Dec 2020 00:19:00 +0300</lastBuildDate>
    
	<atom:link href="/tags/hash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Xây dựng game xếp gạch bằng opencv và python</title>
      <link>/blog/2020-12-25/</link>
      <pubDate>Sat, 26 Dec 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-12-25/</guid>
      <description>Mã nguồn import cv2 import numpy as np from random import choice def getColor(): lstColor = [[255,64,64],[255,165,0],[255,244,79],[102,255,0],[172,229,238],[148,87,235],[148,87,235],[241,156,187]] return choice(lstColor) def getInfo(piece): if piece == &amp;quot;&amp;quot;: coords = np.array([[0, 0]]) elif piece == &amp;quot;I&amp;quot;: coords = np.array([[0, 3], [0, 4], [0, 5], [0, 6]]) elif piece == &amp;quot;T&amp;quot;: coords = np.array([[1, 3], [1, 4], [1, 5], [0, 4]]) elif piece == &amp;quot;L&amp;quot;: coords = np.array([[1, 3], [1, 4], [1, 5], [0, 5]]) elif piece == &amp;quot;J&amp;quot;: coords = np.</description>
    </item>
    
    <item>
      <title>Simhash</title>
      <link>/blog/2020-01-26-simhash/</link>
      <pubDate>Sun, 26 Jan 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-01-26-simhash/</guid>
      <description>Đặt vấn đề Giả sử bạn và tôi đều thích nghe nhạc trên trang mp3.zing.vn. Mỗi người đều nghe khoảng 100 bài nhạc khác nhau. Để đo sự giống nhau giữa danh sách bài hát bạn nghe và danh sách bài hát tôi nghe, thông thường chúng ta sẽ dùng độ đo Jaccard Similarity, được đo bằng cách lấy phần giao (intersection ) chia cho phần hợp (union). Nghĩa là đếm số lượng bài hát cả hai cùng nghe (phần giao) chia cho tổng số bài hát không lặp của cả hai.</description>
    </item>
    
    <item>
      <title>Các hàm hash có sẵn trong python</title>
      <link>/blog/2020-01-13-hash-in-python/</link>
      <pubDate>Sat, 25 Jan 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-01-13-hash-in-python/</guid>
      <description>Built-In Hashing Python có xây dựng sẵn cho chúng ta một hàm hash, chúng ta cứ việc gọi ra và sử dụng.
hash(&amp;quot;pham duy tung&amp;quot;) -7141560399917772220  Một lưu ý nhỏ là giá trị của hàm hash sẽ khác nhau giữa các phiên bản python. Ví dụ ở trên mình xài python 3.8, với bản 3.6 sẽ là
hash(&amp;quot;pham duy tung&amp;quot;) 1568935795476364190  Checksums Chúng ta có thể sử dụng checksums để hash dữ liệu.</description>
    </item>
    
  </channel>
</rss>